- Binary Search
- Hash Tables
- Trees


Complexity Recap
----------------------------------------------------------------------------
Algorithm	       Best Time	     Worst Time	     Notes
----------------------------------------------------------------------------
Binary Search	   O(1)	             O(log n)	     Sorted array required
Hash Table	       O(1)	             O(n)	         Depends on collisions
Tree Traversals	   O(n)	             O(n)	         Must visit all nodes
----------------------------------------------------------------------------

Summary
----------------------------------------------------------------------------
- Use Binary Search for sorted arrays.

- Use Hash Tables for fast key-value access.

- Use Trees for hierarchical data.

- Know how to traverse trees: BFS and DFS (pre, in, post order).